# variables:
# templates_dir
# certs_dir
# service_name
# owner
# common_name
# server_alt_names
# client_alt_names
---
- name: Read Vault token
  ansible.builtin.set_fact:
    vault_token: '{{ lookup("file", ".tmp/root_token_vault.txt") }}'

- name: Create certs dir
  ansible.builtin.file:
    path: '{{ certs_dir }}'
    state: directory
    owner: '{{ owner }}'
    group: '{{ owner }}'
    mode: "0700"

- name: Generate certs from Vault
  delegate_to: vault-server1
  ansible.builtin.shell:
    VAULT_TOKEN={{ vault_token }} vault write -format=json
      pki/issue/nomad-cluster
      common_name={{ common_name }}
      ttl=24h
      alt_names='localhost,{{ ansible_hostname }}.node.consul,{{ alt_names | join(",") }}'
      ip_sans=127.0.0.1,{{ ansible_host }}
  register: certs

- name: Copy certs
  loop:
    - { key: certificate, file: '{{ certs_dir }}/agent.crt' }
    - { key: private_key, file: '{{ certs_dir }}/agent.crt.key' }
    - { key: issuing_ca, file: '{{ certs_dir }}/ca.crt' }
  ansible.builtin.copy:
    content: '{{ "data" | extract(certs.stdout | from_json, item.key) }}'
    dest: '{{ item.file }}'
    owner: '{{ owner }}'
    group: '{{ owner }}'
    mode: "0600"

- name: Generate client certs from Vault
  delegate_to: vault-server1
  ansible.builtin.shell:
    VAULT_TOKEN={{ vault_token }} vault write -format=json
      pki/issue/nomad-cluster
      ttl=24h
      {{ client_alt_names | default([]) | join(",") }}
  register: client_certs

- name: Copy client certs
  loop:
    - { key: certificate, file: '{{ certs_dir }}/client.crt' }
    - { key: private_key, file: '{{ certs_dir }}/client.crt.key' }
  ansible.builtin.copy:
    content: '{{ "data" | extract(client_certs.stdout | from_json, item.key) }}'
    dest: '{{ item.file }}'
    owner: '{{ owner }}'
    group: '{{ owner }}'
    mode: "0600"

- name: Install consul-template
  ansible.builtin.apt:
    name: consul-template
    state: present

- name: Create consul-template systemd unit
  ansible.builtin.template:
    src: consul-template.service.j2
    dest: /lib/systemd/system/consul-template.service
    mode: "0644"

- name: Create consul-template directory
  ansible.builtin.file:
    path: /etc/consul-template.d
    state: directory
    mode: "0755"

- name: Create Vault token
  delegate_to: vault-server1
  ansible.builtin.shell:
    VAULT_TOKEN={{ lookup("file", ".tmp/root_token_vault.txt") }}
    vault token create -field=token -policy="tls-policy" -period=24h -orphan
  register: create_vault_token

- name: Copy consul-template config
  ansible.builtin.template:
    src: consul-template.hcl.j2
    dest: /etc/consul-template.d/consul-template.hcl
    mode: "0644"
  vars:
    consul_template_vault_token: '{{ create_vault_token.stdout }}'
  notify: Restart consul-template

- name: Create templates directory
  ansible.builtin.file:
    path: '{{ templates_dir }}'
    state: directory
    mode: "0755"

- name: Copy templates
  loop:
    - ca.crt
    - agent.crt
    - agent.crt.key
    - client.crt
    - client.crt.key
  ansible.builtin.template:
    src: '{{ item }}.tpl.j2'
    dest: '{{ templates_dir }}/{{ item }}.tpl'
    variable_start_string: '[['
    variable_end_string: ']]'
    mode: "0644"
  notify: Restart consul-template

- name: Copy templates config
  loop:
    - ca.crt
    - agent.crt
    - agent.crt.key
    - client.crt
    - client.crt.key
  ansible.builtin.template:
    src: template.hcl.j2
    dest: '/etc/consul-template.d/{{ item }}.hcl'
    mode: "0644"
  notify: Restart consul-template
