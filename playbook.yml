---
- name: Generate certs
  hosts: localhost
  connection: local
  roles:
    - certs

- name: Generate tokens and keys
  hosts: localhost
  connection: local
  tasks:
    - name: Create keys directory
      ansible.builtin.file:
        path: '.tmp/encrypt_keys'
        state: directory
    - name: Create Consul management token
      ansible.builtin.copy:
        content: '{{ ("management.consul." + external_domain) | to_uuid(namespace="6ba7b810-9dad-11d1-80b4-00c04fd430c8") }}'
        dest: '.tmp/root_token_consul.txt'
        mode: "0644"
    - name: Create Consul encrypt key
      block:
        - name: Check Consul encrypt key
          ansible.builtin.stat:
            path: '.tmp/encrypt_keys/consul.txt'
          register: stat_consul_encrypt_key
        - name: Generate Consul encrypt key
          when: not stat_consul_encrypt_key.stat.exists
          ansible.builtin.copy:
            content: '{{ lookup("community.general.random_string", base64=True, length=32) }}'
            dest: '.tmp/encrypt_keys/consul.txt'
            mode: "0644"
    - name: Create Nomad encrypt key
      block:
        - name: Check Nomad encrypt key
          ansible.builtin.stat:
            path: '.tmp/encrypt_keys/nomad.txt'
          register: stat_nomad_encrypt_key
        - name: Generate Nomad encrypt key
          when: not stat_nomad_encrypt_key.stat.exists
          ansible.builtin.copy:
            content: '{{ lookup("community.general.random_string", base64=True, length=32) }}'
            dest: '.tmp/encrypt_keys/nomad.txt'
            mode: "0644"

- name: Servers deployment
  hosts: localhost
  connection: local
  tasks:
    - ansible.builtin.import_tasks: containers.yml

- name: Wait for servers to be ready
  hosts: localhost
  connection: local
  tasks:
    - name: Wait for servers to be ready
      ansible.builtin.wait_for:
        timeout: 30

- name: Add CA cert
  hosts: all
  roles:
    - ca_cert

- name: Install Hashicorp apt repository
  hosts: consul_servers:vault_servers:nomad_servers:nomad_clients
  roles:
    - hashicorp_apt

- name: Setup Consul servers
  hosts: consul_servers
  roles:
    - consul_server
    - consul_dns

- name: Initialize Consul acl
  hosts: consul_servers
  roles:
    - consul_server_acl

- name: Setup Vault servers
  hosts: vault_servers
  roles:
    - consul_client
    - vault_server

- name: Initialize Vault
  hosts: vault-server1
  roles:
    - vault_server_init

- name: Unseal Vault
  hosts: vault_servers
  roles:
    - vault_server_unseal

- name: Setup Nomad servers
  hosts: nomad_servers
  roles:
    - consul_client
    - nomad_server

- name: Initialize Nomad acl
  hosts: nomad-server1
  roles:
    - nomad_server_acl

- name: Setup Nomad clients
  hosts: nomad_clients
  roles:
    - consul_client
    - nomad_client

- name: Setup NFS Server
  hosts: nfs-server
  roles:
    - nfs_server

- name: Setup load balancer
  hosts: load-balancer
  roles:
    - load_balancer

- name: Setup nomad jobs
  hosts: localhost
  connection: local
  tasks:
    - name: Execute terraform
      community.general.terraform:
        project_path: ./terraform
        state: present
        force_init: true
        variables:
          nfs_server_host: '{{ hostvars["nfs-server"].ansible_host }}'
          external_domain: '{{ external_domain }}'
          apps_subdomain: '{{ apps_subdomain }}'
          ca_cert: '{{ lookup("file", ".tmp/certs/ca/cert.pem") }}'
          consul_address: '{{ hostvars["consul-server1"].ansible_host }}:8501'
          consul_scheme: https
          consul_token: '{{ lookup("file", ".tmp/root_token_consul.txt") }}'
          nomad_address: 'https://{{ hostvars["nomad-server1"].ansible_host}}:4646'
          nomad_secret_id: '{{ lookup("file", ".tmp/root_token_nomad.txt") }}'
          client_cert: '{{ lookup("file", ".tmp/certs/nomad_client/cert.pem") }}'
          client_key: '{{ lookup("file", ".tmp/certs/nomad_client/private_key.pem") }}'
          nomad_autoscaler_cert: '{{ lookup("file", ".tmp/certs/nomad_client/cert.pem") }}'
          nomad_autoscaler_key: '{{ lookup("file", ".tmp/certs/nomad_client/private_key.pem") }}'
          vault_address: 'https://{{ hostvars["vault-server1"].ansible_host }}:8200'
          vault_token: '{{ lookup("file", ".tmp/root_token_vault.txt") }}'